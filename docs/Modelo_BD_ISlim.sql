-- MySQL Script generated by MySQL Workbench
-- Thu Jul 12 17:41:55 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema netwey
-- -----------------------------------------------------
-- Base de datos para la plataforma de Netwey Mexico.
DROP SCHEMA IF EXISTS `netwey` ;

-- -----------------------------------------------------
-- Schema netwey
--
-- Base de datos para la plataforma de Netwey Mexico.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `netwey` DEFAULT CHARACTER SET utf8 ;
USE `netwey` ;

-- -----------------------------------------------------
-- Table `netwey`.`islim_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_users` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_users` (
  `email` VARCHAR(255) NOT NULL COMMENT 'Email des usuario',
  `parent_email` VARCHAR(255) NULL COMMENT 'Email del superior inmediato de usuario.',
  `dni` VARCHAR(45) NULL COMMENT 'Documento de identidad Nacional',
  `name` VARCHAR(90) NULL COMMENT 'Nombres',
  `last_name` VARCHAR(90) NULL COMMENT 'Apellidos',
  `password` VARCHAR(255) NULL COMMENT 'Contraseña',
  `platform` ENUM('admin', 'vendor', 'call', 'promotor', 'coordinador', 'all') NULL COMMENT 'Plataforma a la cual pues acceder\n',
  `phone` VARCHAR(45) NULL COMMENT 'Telefono Personal\n',
  `phone_job` VARCHAR(45) NULL COMMENT 'Telefono asignado por la empresa.\n',
  `profession` VARCHAR(100) NULL COMMENT 'Profesión del empleado',
  `position` VARCHAR(100) NULL COMMENT 'Cargo dentro de netwey',
  `address` TEXT NULL COMMENT 'Dirección de habitación',
  `date_reg` DATETIME NULL,
  `date_mod` DATETIME NULL,
  `charger_balance` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Balance para poder hacer Recargas',
  `charger_com` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Comisión al momento de hacer un deposito de recarga',
  `tokenPassword` VARCHAR(255) NULL COMMENT 'Token que se genera para solicitar un password',
  `dateToken` DATETIME NULL COMMENT 'Fecha de registro del token',
  `status` ENUM('A', 'I', 'S', 'T') NULL COMMENT 'A: Activo\nI: Inactivo\nS: Suspendido\nT: eliminado',
  PRIMARY KEY (`email`))
ENGINE = InnoDB
COMMENT = 'Es donde se almacenaran los usuario que van a utilizar las distintas plataformas de “Netwey” (Portal Adm, Portal Vendedores, Portal Callcenter, entre otros).';


-- -----------------------------------------------------
-- Table `netwey`.`islim_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_roles` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_roles` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador del rol',
  `title` VARCHAR(80) NULL COMMENT 'Titulo del rol',
  `action` VARCHAR(45) NULL COMMENT 'Acción a realizar',
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Tabla del registro de roles (Módulos) de la plataforma.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_providers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_providers` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_providers` (
  `dni` VARCHAR(45) NOT NULL COMMENT 'Documento de identidad',
  `rfc` VARCHAR(45) NULL COMMENT 'Registro Fiscal',
  `name` VARCHAR(100) NULL COMMENT 'Nombre del proveedor',
  `business_name` VARCHAR(255) NULL COMMENT 'Razon Social',
  `address` VARCHAR(45) NULL COMMENT 'Dirección de la empresa',
  `email` VARCHAR(255) NULL COMMENT 'email responsable',
  `phone` VARCHAR(45) NULL COMMENT 'telf responsable o de el proveedor',
  `responsable` VARCHAR(100) NULL COMMENT 'nombre del responsable\n',
  `date_reg` DATETIME NULL,
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  PRIMARY KEY (`dni`))
ENGINE = InnoDB
COMMENT = 'Registro de proveedores';


-- -----------------------------------------------------
-- Table `netwey`.`islim_inv_categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_inv_categories` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_inv_categories` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de la categoría\n',
  `title` VARCHAR(100) NULL COMMENT 'Titulo de la categoría\n',
  `description` TEXT NULL COMMENT 'Descripción de la categoria\n',
  `date_reg` DATETIME NULL COMMENT 'fecha del registro\n',
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Registro de categorías a las cuales puede pertenecer un artículo.\n';


-- -----------------------------------------------------
-- Table `netwey`.`islim_inv_articles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_inv_articles` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_inv_articles` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador del articula\n',
  `provider_dni` VARCHAR(45) NOT NULL COMMENT 'Identificador del proveedor',
  `category_id` INT NOT NULL COMMENT 'La categoría a la cual pertenece un artículo\n',
  `title` VARCHAR(100) NULL COMMENT 'Título del artículo\n',
  `description` TINYTEXT NULL COMMENT 'Descripción del artículo\n',
  `type_barcode` VARCHAR(45) NULL COMMENT 'Típo de código de barras\n',
  `date_reg` DATETIME NULL COMMENT 'Fecha de registro\n',
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nTrash: eliminado',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_inv_products_providers1_idx` (`provider_dni` ASC),
  INDEX `fk_islim_inv_products_islim_inv_categories1_idx` (`category_id` ASC),
  CONSTRAINT `fk_islim_inv_products_providers1`
    FOREIGN KEY (`provider_dni`)
    REFERENCES `netwey`.`islim_providers` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_inv_products_islim_inv_categories1`
    FOREIGN KEY (`category_id`)
    REFERENCES `netwey`.`islim_inv_categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'El es registro de Artículos que envía un distribuidor y los cuales se asocian a una Bodega.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_warehouses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_warehouses` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_warehouses` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de la bodega',
  `name` VARCHAR(150) NULL COMMENT 'Nombre de la Bodega',
  `address` TEXT NULL COMMENT 'Dirección de ubicación',
  `phone` VARCHAR(45) NULL COMMENT 'Telf de la bodega.',
  `lat` VARCHAR(45) NULL COMMENT 'Latitud',
  `lng` VARCHAR(45) NULL COMMENT 'longitud\n',
  `position` POINT NULL DEFAULT NULL COMMENT 'Registro de la latitud y longitud en BD.',
  `date_reg` DATETIME NULL,
  `status` ENUM('A', 'I', 'T') NOT NULL DEFAULT 'I' COMMENT 'A: Activo\nI: inactivo\nTrash: eliminado',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Registro de Bodegas.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_inv_arti_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_inv_arti_details` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_inv_arti_details` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador del detalle de artículo\n',
  `parent_id` INT NULL COMMENT 'Identificador del elemento padre (Si lo tines), es decir, una detalle de articulo puede ser padre de otro detalle de articulo.',
  `inv_article_id` INT NOT NULL COMMENT 'Identificador del artículo',
  `warehouses_id` INT NULL COMMENT 'Identificador de la bodega a la cual pertenece.\n',
  `num_ord` VARCHAR(45) NULL,
  `serial` VARCHAR(255) NULL COMMENT 'Serial',
  `msisdn` VARCHAR(45) NOT NULL COMMENT 'MSISDN en caso de ser una simcard.',
  `iccid` VARCHAR(100) NULL COMMENT 'identificador de la tarjeta del circuito integrado',
  `imei` VARCHAR(100) NULL COMMENT 'Identidad Internacional del Abonado a un Móvil',
  `imsi` VARCHAR(100) NULL,
  `date_reception` DATETIME NULL COMMENT 'Fecha en que se recibió',
  `date_sending` DATETIME NULL COMMENT 'fecha en que fue enviado\n',
  `price_pay` DOUBLE NULL COMMENT 'precio que se pagó',
  `date_reg` DATETIME NULL COMMENT 'Fecha de registro\n',
  `status` ENUM('A', 'I', 'S', 'E', 'V', 'G', 'T') NOT NULL DEFAULT 'A' COMMENT 'A: Activo\nI: Inactivo\nS: Enviado a almacén\nE: Espera de entrega\nV: Vendido\nG: Garantia\nTrash: Eliminado\n\n',
  `obs` TINYTEXT NULL COMMENT 'Observación\n',
  `assigned` ENUM('S', 'N') NOT NULL DEFAULT 'N',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_inv_prod_details_islim_inv_products1_idx` (`inv_article_id` ASC),
  INDEX `fk_islim_inv_prod_details_islim_inv_prod_details1_idx` (`parent_id` ASC),
  INDEX `fk_islim_inv_arti_details_islim_warehouses1_idx` (`warehouses_id` ASC),
  UNIQUE INDEX `msisdn_UNIQUE` (`msisdn` ASC),
  CONSTRAINT `fk_islim_inv_prod_details_islim_inv_products1`
    FOREIGN KEY (`inv_article_id`)
    REFERENCES `netwey`.`islim_inv_articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_inv_prod_details_islim_inv_prod_details1`
    FOREIGN KEY (`parent_id`)
    REFERENCES `netwey`.`islim_inv_arti_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_inv_arti_details_islim_warehouses1`
    FOREIGN KEY (`warehouses_id`)
    REFERENCES `netwey`.`islim_warehouses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Es donde se registra el detalle de cada artículo, es decir cada articulo puede tener N cantidad de artículos asociados que se diferencian por un serial. son el mismo artículo pero esto define la cantidad determinada que existe.por cada artículo.\n';


-- -----------------------------------------------------
-- Table `netwey`.`islim_policies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_policies` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_policies` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de la politica',
  `roles_id` INT NOT NULL COMMENT 'Identificador del rol',
  `name` VARCHAR(200) NOT NULL COMMENT 'Nombre de la política.',
  `code` VARCHAR(45) NOT NULL COMMENT 'Código relacional para identificar en el desarrollo',
  `url_route` VARCHAR(255) NULL,
  `type` ENUM('CH', 'TX') NULL COMMENT 'CH: Checkbox\nTX: Campo de Texto',
  `description` TEXT NULL COMMENT 'Descripción de la politica',
  PRIMARY KEY (`id`, `roles_id`),
  INDEX `fk_islim_policies_islim_roles1_idx` (`roles_id` ASC),
  CONSTRAINT `fk_islim_policies_islim_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `netwey`.`islim_roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabla de políticas asociadas al rol';


-- -----------------------------------------------------
-- Table `netwey`.`islim_user_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_user_roles` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_user_roles` (
  `user_email` VARCHAR(255) NOT NULL COMMENT 'Email de usuario',
  `policies_id` INT NOT NULL COMMENT 'Identificador de la politica',
  `roles_id` INT NOT NULL COMMENT 'Identificador del rol',
  `value` VARCHAR(200) NULL COMMENT 'si la política es type TX, aqui se guardará el valor asociado.',
  `date_reg` DATETIME NULL,
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  INDEX `fk_islim_user_roles_islim_users_idx` (`user_email` ASC),
  PRIMARY KEY (`policies_id`, `roles_id`, `user_email`),
  CONSTRAINT `fk_islim_user_roles_islim_users`
    FOREIGN KEY (`user_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_user_roles_islim_policies1`
    FOREIGN KEY (`policies_id` , `roles_id`)
    REFERENCES `netwey`.`islim_policies` (`id` , `roles_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabla para ruptura de muchos a muchos entre usuarios y políticas.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_user_logs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_user_logs` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_user_logs` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador de la bitácora',
  `email_auth` VARCHAR(255) NULL COMMENT 'email del usuario\n',
  `action` VARCHAR(80) NULL COMMENT 'Acción que realizo, \nInsertar, Actualizar, Eliminar, mover, vender, entre otras.',
  `table` VARCHAR(255) NULL COMMENT 'Tabla a la cual afectó',
  `id_table` VARCHAR(255) NULL COMMENT 'Identificador de la tábla\n',
  `meta` TEXT NULL COMMENT 'Datos adicionales\n',
  `date_reg` DATETIME NULL COMMENT 'Fecha de la acción\n',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Registro de bitácora de la plataforma. Aquí se registran todas las acciones que que hace un usuario.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_inv_assignments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_inv_assignments` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_inv_assignments` (
  `users_email` VARCHAR(255) NOT NULL COMMENT 'Email de usuario\n',
  `inv_arti_details_id` INT NOT NULL COMMENT 'Identificador del detalle de artículo\n',
  `date_reg` DATETIME NULL COMMENT 'Fecha de registro\n',
  `status` ENUM('A', 'I', 'P', 'T', 'G') NULL COMMENT 'A: Activo\nI: inactivo\nP: Procesado Venta\nT: eliminado\nG: Garantia\n',
  `obs` TEXT NULL COMMENT 'Observación\n',
  PRIMARY KEY (`inv_arti_details_id`, `users_email`),
  INDEX `fk_islim_inv_assignments_islim_inv_arti_details1_idx` (`inv_arti_details_id` ASC),
  INDEX `fk_islim_inv_assignments_islim_users1_idx` (`users_email` ASC),
  CONSTRAINT `fk_islim_inv_assignments_islim_inv_arti_details1`
    FOREIGN KEY (`inv_arti_details_id`)
    REFERENCES `netwey`.`islim_inv_arti_details` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_inv_assignments_islim_users1`
    FOREIGN KEY (`users_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Es el registro de detalle de articulos asociados a un usuario (Vendedor)';


-- -----------------------------------------------------
-- Table `netwey`.`islim_main_menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_main_menu` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_main_menu` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Identificador del item',
  `parent_id` INT(10) UNSIGNED NULL DEFAULT NULL COMMENT 'Identifica quien es el padre (Para manejar las jerarquias)',
  `description` VARCHAR(30) NOT NULL COMMENT 'Texto a mostrar como titulo del menu',
  `platform` ENUM('admin','vendor') NOT NULL COMMENT 'Indica a que plataforma pertenece el menu',
  `status` ENUM('A','I','T') NOT NULL,
  `order` INT(10) UNSIGNED NOT NULL COMMENT 'orden a mostrar en el nivel al que pertenece el item',
  `url` VARCHAR(45) NOT NULL COMMENT 'url a llamar cuando se seleccione el item',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 15
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `netwey`.`islim_number_test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_number_test` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_number_test` (
  `msisdn` VARCHAR(45) NOT NULL,
  `service_id` INT(11) NULL DEFAULT NULL,
  `address` VARCHAR(255) NULL DEFAULT NULL,
  `type_buy` ENUM('CR','CO') NOT NULL DEFAULT 'CR',
  `serviceability` VARCHAR(100) NULL DEFAULT NULL,
  `lat` VARCHAR(45) NULL DEFAULT NULL,
  `lng` VARCHAR(45) NULL DEFAULT NULL,
  `point` POINT NULL DEFAULT NULL,
  `price_remaining` DOUBLE NULL DEFAULT NULL,
  `status` ENUM('A','I') NULL DEFAULT 'A',
  `total_remaaining` DOUBLE NULL DEFAULT NULL,
  `profile_altan` TINYINT(1) NULL DEFAULT NULL,
  `transaction_number` VARCHAR(100) NULL DEFAULT NULL,
  `concentrator_balance` DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (`msisdn`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `netwey`.`islim_packs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_packs` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_packs` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador del pack\n',
  `title` VARCHAR(90) NULL COMMENT 'Título del pack\n',
  `description` TEXT NULL COMMENT 'Descripción del pack',
  `price_arti` DOUBLE NULL COMMENT 'Precio\n',
  `date_ini` DATETIME NULL COMMENT 'Fecha de inicio donde se explica desde cuando se puede ver este artículo, si esta en blanco significa q maneja este flujo.',
  `date_end` DATETIME NULL COMMENT 'Fecha de finalización del pack, es decir, que solo se va a mostrar hasta una determinada fecha, si esta está vacía este flujo no se cumple en este pack.\n',
  `date_reg` DATETIME NULL COMMENT 'Fecha en la cual se registro el pack',
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Son los Pack que se pueden armar en la plataforma, un pack puede estar armado por n cantidad de artículos.\n';


-- -----------------------------------------------------
-- Table `netwey`.`islim_periodicities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_periodicities` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_periodicities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `periodicity` ENUM('DIARIO', 'SEMANAL', 'QUINCENAL', 'MENSUAL', 'TRIMESTRAL', 'SEMESTRAL', 'ANUAL') NOT NULL,
  `price_fee` DOUBLE NOT NULL DEFAULT 0,
  `status` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_services`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_services` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_services` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `periodicity_id` INT NOT NULL,
  `codeAltan` VARCHAR(45) NULL,
  `title` VARCHAR(200) NULL,
  `description` TEXT NULL,
  `price_pay` DOUBLE NULL,
  `price_remaining` DOUBLE NULL COMMENT 'Precio de lo que deberá seguir pagando, hasta culminar su credito.',
  `broadband` VARCHAR(20) NULL COMMENT 'Velocidad del plan\nbroadband20 o broadband10 (Puede que salga otro en algún momento)',
  `supplementary` ENUM('Y', 'N') NOT NULL DEFAULT 'Y',
  `date_reg` VARCHAR(45) NULL,
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  `type` ENUM('A', 'P', 'H') NULL COMMENT 'A = Alta\nP = Planes\nH = Ocultos',
  `method_pay` ENUM('CR', 'CO') NULL COMMENT 'CR : Credito\nCO : Contado',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_services_islim_ periodicities1_idx` (`periodicity_id` ASC),
  CONSTRAINT `fk_islim_services_islim_ periodicities1`
    FOREIGN KEY (`periodicity_id`)
    REFERENCES `netwey`.`islim_periodicities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_concentrators`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_concentrators` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_concentrators` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador del concentrador\n',
  `name` VARCHAR(200) NULL COMMENT 'Nombre del concentrador',
  `rfc` VARCHAR(45) NULL COMMENT 'Registro Federal de Contribuyentes',
  `dni` VARCHAR(45) NULL COMMENT 'Documento Nacional de identidad',
  `business_name` VARCHAR(255) NULL COMMENT 'Razon Social\n',
  `address` TEXT NULL COMMENT 'Dirección\n',
  `email` VARCHAR(200) NULL COMMENT 'email',
  `phone` VARCHAR(45) NULL COMMENT 'Núm. Telf\n',
  `balance` DOUBLE NULL COMMENT 'Balance\n',
  `commissions` DOUBLE NULL,
  `date_reg` DATETIME NULL COMMENT 'fecha de registro\n',
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Registro de concentradores, (Empresas encargadas de hacer ventas de recargas de los servicios de Netwey)';


-- -----------------------------------------------------
-- Table `netwey`.`islim_api_keys`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_api_keys` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_api_keys` (
  `api_key` VARCHAR(255) NOT NULL COMMENT 'api-key',
  `concentrators_id` INT NOT NULL COMMENT 'identificador del concentrados',
  `type` ENUM('prod', 'test') NULL COMMENT 'Tipo de api-key',
  `date_reg` DATETIME NULL COMMENT 'Fecha de registro',
  `status` ENUM('A', 'I', 'T') NULL COMMENT 'A: Activo\nI: Inactivo\nT: Eliminar',
  PRIMARY KEY (`api_key`),
  INDEX `fk_api_keys_concentrators1_idx` (`concentrators_id` ASC),
  CONSTRAINT `fk_api_keys_concentrators1`
    FOREIGN KEY (`concentrators_id`)
    REFERENCES `netwey`.`islim_concentrators` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Registro de API-Key generadas por sistema (Son 2 por concentrador)\n1.- API-KEY para test\n2.- API-KEY para producción.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_ip_servers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_ip_servers` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_ip_servers` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador dela IP',
  `api_key` VARCHAR(255) NOT NULL,
  `ip` VARCHAR(255) NOT NULL COMMENT 'Ip a registrar',
  `status` ENUM('A', 'I', 'T') NOT NULL COMMENT 'A: Activar\nI: Desactivar\nT: Borrar\n',
  `date_reg` DATETIME NULL COMMENT 'Fecha e registro\n',
  PRIMARY KEY (`id`),
  INDEX `fk_ip_servers_api_keys1_idx` (`api_key` ASC),
  CONSTRAINT `fk_ip_servers_api_keys1`
    FOREIGN KEY (`api_key`)
    REFERENCES `netwey`.`islim_api_keys` (`api_key`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Registro de IP, a los cuales se puede acceder con una api-key';


-- -----------------------------------------------------
-- Table `netwey`.`islim_wh_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_wh_users` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_wh_users` (
  `users_email` VARCHAR(255) NOT NULL COMMENT 'Email del usuario',
  `warehouses_id` INT NOT NULL COMMENT 'Identificador de la bodega',
  `date_reg` DATETIME NOT NULL,
  `status` ENUM('A', 'I', 'T') NOT NULL COMMENT 'A: Activo\nI: inactivo\nTrash: eliminado',
  INDEX `fk_islim_wh_users_islim_warehouses1_idx` (`warehouses_id` ASC),
  PRIMARY KEY (`users_email`, `warehouses_id`),
  CONSTRAINT `fk_islim_wh_users_islim_users1`
    FOREIGN KEY (`users_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_wh_users_islim_warehouses1`
    FOREIGN KEY (`warehouses_id`)
    REFERENCES `netwey`.`islim_warehouses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Registro asociativo de bodega con usuario, donde se definen los usuarios asociados a una bodega como responsables.\n';


-- -----------------------------------------------------
-- Table `netwey`.`islim_banks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_banks` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_banks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `address` TEXT NOT NULL,
  `numAcount` VARCHAR(100) NOT NULL,
  `typeAcount` VARCHAR(45) NOT NULL,
  `DNI` VARCHAR(100) NULL,
  `Date_reg` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_deposits`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_deposits` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_deposits` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `bank_id` INT NULL,
  `concentrators_id` INT NULL,
  `users_email` VARCHAR(255) NULL,
  `descripción` VARCHAR(200) NOT NULL,
  `photo` VARCHAR(200) NOT NULL,
  `amount` DOUBLE NULL,
  `real_amout` DOUBLE NULL,
  `date_deposit` DATE NOT NULL,
  `date_asigned` DATETIME NULL,
  `date_reg` DATETIME NULL,
  `status` ENUM('A', 'I', 'P', 'T') NULL COMMENT 'A: Activo\nI: inactivo\nP: Procesado\nT: eliminado',
  `obs` VARCHAR(200) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_islim_deposits_islim_concentrators1_idx` (`concentrators_id` ASC),
  INDEX `fk_islim_deposits_islim_banks1_idx` (`bank_id` ASC),
  INDEX `fk_islim_deposits_islim_users1_idx` (`users_email` ASC),
  CONSTRAINT `fk_islim_deposits_islim_concentrators1`
    FOREIGN KEY (`concentrators_id`)
    REFERENCES `netwey`.`islim_concentrators` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_deposits_islim_users1`
    FOREIGN KEY (`users_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_deposits_islim_banks1`
    FOREIGN KEY (`bank_id`)
    REFERENCES `netwey`.`islim_banks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_services_test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_services_test` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_services_test` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `periodicity_id` INT(11) NOT NULL,
  `codeAltan` VARCHAR(45) NULL DEFAULT NULL,
  `title` VARCHAR(200) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `price_pay` DOUBLE NULL DEFAULT NULL,
  `price_remaining` DOUBLE NULL DEFAULT NULL COMMENT 'Precio de lo que deberá seguir pagando, hasta culminar su credito.',
  `broadband` VARCHAR(20) NULL DEFAULT NULL COMMENT 'Velocidad del plan\nbroadband20 o broadband10 (Puede que salga otro en algún momento)',
  `date_reg` VARCHAR(45) NULL DEFAULT NULL,
  `status` ENUM('A', 'I', 'T') NULL DEFAULT NULL COMMENT 'A: Activo\nI: inactivo\nT: eliminado',
  `type` ENUM('A','P','H') NULL DEFAULT NULL COMMENT 'A = Alta\nP = Planes\nH = Ocultos',
  `method_pay` ENUM('CR','CO') NULL DEFAULT NULL COMMENT 'CR : Credito\nCO : Contado',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_services_test_islim_ periodicities1_idx` (`periodicity_id` ASC),
  CONSTRAINT `fk_islim_services_test_islim_ periodicities1`
    FOREIGN KEY (`periodicity_id`)
    REFERENCES `netwey`.`islim_periodicities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `netwey`.`islim_sessions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_sessions` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_sessions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `users_email` VARCHAR(255) NULL,
  `concentrators_id` INT NULL,
  `api_key` VARCHAR(255) NULL,
  `token` VARCHAR(255) NOT NULL,
  `ttl` INT NOT NULL,
  `date_reg` DATETIME NOT NULL,
  `status` ENUM('A', 'I', 'T') NOT NULL COMMENT 'A: Activo\nI: inactivo\nTrash: eliminado',
  `ip` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `token_UNIQUE` (`token` ASC),
  INDEX `fk_islim_sessions_islim_users1_idx` (`users_email` ASC),
  INDEX `fk_islim_sessions_islim_concentrators1_idx` (`concentrators_id` ASC),
  CONSTRAINT `fk_islim_sessions_islim_users1`
    FOREIGN KEY (`users_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_sessions_islim_concentrators1`
    FOREIGN KEY (`concentrators_id`)
    REFERENCES `netwey`.`islim_concentrators` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_clients`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_clients` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_clients` (
  `dni` VARCHAR(45) NOT NULL COMMENT 'Documento de identidad INE del cliente',
  `user_mail` VARCHAR(255) NULL COMMENT 'Espesifica el vendedor al cual se le asigno el cliente.',
  `reg_email` VARCHAR(255) NULL COMMENT 'Email de quien lo registro.',
  `name` VARCHAR(80) NULL COMMENT 'Nombre del Cliente',
  `last_name` VARCHAR(45) NULL COMMENT 'Apellido del cliente',
  `address` VARCHAR(255) NULL COMMENT 'Dirección de habitación',
  `birthday` DATE NULL COMMENT 'fecha de cumpleaños',
  `email` VARCHAR(255) NULL COMMENT 'Email del cliente',
  `phone_home` VARCHAR(90) NULL COMMENT 'Teléfono de contacto',
  `pwd_client` VARCHAR(255) NULL,
  `date_ref` DATETIME NULL,
  `tokenPassword` VARCHAR(255) NULL,
  `dateToken` DATETIME NULL,
  `date_reg` DATETIME NOT NULL,
  PRIMARY KEY (`dni`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_client_netweys`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_client_netweys` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_client_netweys` (
  `msisdn` VARCHAR(45) NOT NULL COMMENT 'Número de telf ',
  `clients_dni` VARCHAR(45) NOT NULL COMMENT 'Dni de cliente',
  `service_id` INT NOT NULL,
  `address` VARCHAR(255) NULL COMMENT 'Dirección asociada al producto',
  `type_buy` ENUM('CR', 'CO') NULL COMMENT 'Tipo de compra\nCR: Credito\nCO: Contado',
  `periodicity` VARCHAR(60) NULL COMMENT 'Periodicidad de pago\nweekly: Semanalmente.\nmonthly: Mensualmente.',
  `num_dues` INT NULL COMMENT 'numero de cuotas',
  `paid_fees` INT NULL COMMENT 'cuotas pagadas',
  `unique_transaction` VARCHAR(100) NULL COMMENT 'Código de la compra',
  `serviceability` VARCHAR(100) NULL,
  `lat` VARCHAR(45) NULL COMMENT 'Latitud',
  `lng` VARCHAR(45) NULL COMMENT 'Longitud\n',
  `point` POINT NULL DEFAULT NULL COMMENT 'Campo personalizado del latitud y longitud de mysql.',
  `date_buy` DATETIME NULL COMMENT 'Fecha de la Compra',
  `price_remaining` DOUBLE NOT NULL DEFAULT 0,
  `date_reg` DATETIME NULL COMMENT 'Fecha de registro\n',
  `date_expire` DATE NULL COMMENT 'Fecha de expiración del ultimo plan comprado',
  `status` ENUM('A', 'I', 'S', 'T') NULL COMMENT 'Estatus\nA: Activo\nI: Inactivo\nS: Suspendido\nT: Eliminado\n',
  `obs` TEXT NULL COMMENT 'Observación en caso que se necesite por la suspensión.\n',
  `credit` ENUM('A', 'P') NULL COMMENT 'Estados que define si aun está a credito o ya pagó el equipo\nA: Credito Activo\nP: Credito Procesado\n',
  PRIMARY KEY (`msisdn`),
  INDEX `fk_islim_client_netways_islim_clients1_idx` (`clients_dni` ASC),
  INDEX `fk_islim_client_netways_islim_services1_idx` (`service_id` ASC),
  CONSTRAINT `fk_islim_client_netways_islim_clients1`
    FOREIGN KEY (`clients_dni`)
    REFERENCES `netwey`.`islim_clients` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_client_netways_islim_services1`
    FOREIGN KEY (`service_id`)
    REFERENCES `netwey`.`islim_services` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Son los registro de dispositivos que ha adquirido un cliente, que se podrá saber como lo adquiríos (Credito o a Contado), si debe alguna información, entre otros.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_assig_packs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_assig_packs` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_assig_packs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_sales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_sales` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_sales` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador de la venta\n',
  `services_id` INT NULL COMMENT 'identificador del servicio\n',
  `concentrators_id` INT NULL COMMENT 'identificador del contentrador en caso de ser una venta por concentrador\n',
  `assig_pack_id` INT NULL,
  `inv_arti_details_id` INT NULL,
  `api_key` VARCHAR(255) NULL,
  `users_email` VARCHAR(255) NULL COMMENT 'email del usuario en caso de ser una venta de un vendedor',
  `packs_id` INT NULL COMMENT 'identificador del paquete en caso de ser una alta.\n',
  `order_altan` VARCHAR(60) NULL,
  `unique_transaction` VARCHAR(100) NOT NULL COMMENT 'Identifica globalmente la venta (Pack+servicio) o solo servicio.\n1.- Si es un alta se haces 2 registros, una de la recarga y otra de la venta del equipo.\n\n2.- Si es una recarga de crédito se hace un registro de recarga y otro del pagó del crédito.\n\nLos 2 registros deben llevar el mismo código único de transacción',
  `codeAltan` VARCHAR(100) NULL,
  `type` ENUM('R', 'P', 'CR') NULL DEFAULT 'R' COMMENT 'tipo de venta (Recarga o Pack)\nR: Recarga\nP: Plan inicial.\nCR: Pago de credito.',
  `id_point` VARCHAR(200) NOT NULL DEFAULT 'VENDOR' COMMENT 'identificador del punto en caso de ser un concentrador\n',
  `description` VARCHAR(45) NULL COMMENT 'descripción de la venta\n',
  `amount` DOUBLE NOT NULL COMMENT 'Monto cobrado',
  `amount_net` DOUBLE NOT NULL COMMENT 'Monto sin impuesto\n',
  `com_amount` DOUBLE NOT NULL,
  `msisdn` VARCHAR(45) NOT NULL,
  `conciliation` ENUM('Y', 'N') NOT NULL DEFAULT 'N' COMMENT 'Si ya fue conciliado con el concentrador o no.',
  `lat` VARCHAR(45) NULL COMMENT 'Latitud y longitud en el momento en que se hace la recarga o venta',
  `lng` VARCHAR(45) NULL COMMENT 'Latitud y longitud en el momento en que se hace la recarga o venta',
  `position` POINT NULL DEFAULT NULL COMMENT 'registro de posicionamiento.\n',
  `date_reg` VARCHAR(45) NOT NULL COMMENT 'Fecha de registro\n',
  `status` ENUM('A', 'I', 'E', 'T') NOT NULL DEFAULT 'A' COMMENT 'A: Activo\nI: inactivo\nE: Espera de Depósito Vendedores NETWEY\nT: eliminado',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_sales_islim_concentrators1_idx` (`concentrators_id` ASC),
  INDEX `fk_islim_sales_islim_services1_idx` (`services_id` ASC),
  INDEX `fk_islim_sales_islim_users1_idx` (`users_email` ASC),
  INDEX `fk_islim_sales_islim_client_netways1_idx` (`msisdn` ASC),
  INDEX `fk_islim_sales_islim_assig_packs1_idx` (`assig_pack_id` ASC),
  INDEX `fk_islim_sales_islim_inv_arti_details1_idx` (`inv_arti_details_id` ASC),
  CONSTRAINT `fk_islim_sales_islim_client_netways1`
    FOREIGN KEY (`msisdn`)
    REFERENCES `netwey`.`islim_client_netweys` (`msisdn`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_sales_islim_concentrators1`
    FOREIGN KEY (`concentrators_id`)
    REFERENCES `netwey`.`islim_concentrators` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_sales_islim_services1`
    FOREIGN KEY (`services_id`)
    REFERENCES `netwey`.`islim_services` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_sales_islim_users1`
    FOREIGN KEY (`users_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_sales_islim_assig_packs1`
    FOREIGN KEY (`assig_pack_id`)
    REFERENCES `netwey`.`islim_assig_packs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_islim_sales_islim_inv_arti_details1`
    FOREIGN KEY (`inv_arti_details_id`)
    REFERENCES `netwey`.`islim_inv_arti_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Registro de ventas de servicios y productos.\n';


-- -----------------------------------------------------
-- Table `netwey`.`islim_tmp_sales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_tmp_sales` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_tmp_sales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `service_id` INT NULL,
  `concentratos_id` INT NULL,
  `unique_transaction` VARCHAR(100) NULL,
  `id_point` VARCHAR(200) NULL,
  `descriptión` VARCHAR(45) NULL,
  `amount` DOUBLE NULL,
  `msisdn` VARCHAR(45) NOT NULL,
  `lat` VARCHAR(45) NULL,
  `lng` VARCHAR(45) NULL,
  `position` POINT NULL DEFAULT NULL,
  `date_fase1` DATETIME NULL,
  `date_fase2` DATETIME NULL,
  `date_fase3` DATETIME NULL,
  `status` ENUM('E', 'A', 'I', 'P', 'T') NOT NULL DEFAULT 'E',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_logs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_logs` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_logs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ip` VARCHAR(255) NULL,
  `user` VARCHAR(255) NULL,
  `action` ENUM('in', 'out', 'delete', 'update', 'insert') NOT NULL,
  `type_log` ENUM('alert', 'warning', 'error', 'dev') NOT NULL,
  `request` VARCHAR(255) NOT NULL,
  `header` TEXT NULL,
  `data` TEXT NULL,
  `date_reg` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_altan_logs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_altan_logs` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_altan_logs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ip` VARCHAR(64) NULL,
  `altan_tokens_id` INT NULL,
  `api_key` VARCHAR(255) NULL,
  `date_reg` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `request` VARCHAR(45) NOT NULL,
  `type` ENUM('SEND', 'RECEIVE') NOT NULL,
  `code` VARCHAR(45) NOT NULL,
  `header` TEXT NULL,
  `data` TEXT NOT NULL,
  `type_altan` ENUM('error', 'alert', 'warning') NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_altan_services`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_altan_services` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_altan_services` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `client_id` VARCHAR(255) NOT NULL,
  `client_secret` VARCHAR(255) NOT NULL,
  `OperatorId` VARCHAR(255) NOT NULL,
  `PartnerId` VARCHAR(255) NOT NULL,
  `Operation-User` VARCHAR(255) NOT NULL,
  `Operation-Password` VARCHAR(255) NOT NULL,
  `type` ENUM('dev', 'prod') NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_altan_tokens`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_altan_tokens` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_altan_tokens` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `altan_id` INT NOT NULL,
  `accessToken` VARCHAR(255) NOT NULL,
  `tokenType` VARCHAR(45) NOT NULL,
  `expiresIn` VARCHAR(45) NOT NULL,
  `data` TEXT NOT NULL,
  `date_reg` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_altan_tokens_islim_altan_services1_idx` (`altan_id` ASC),
  CONSTRAINT `fk_islim_altan_tokens_islim_altan_services1`
    FOREIGN KEY (`altan_id`)
    REFERENCES `netwey`.`islim_altan_services` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_altan_errors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_altan_errors` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_altan_errors` (
  `error_code` VARCHAR(255) NOT NULL,
  `message` VARCHAR(300) NOT NULL,
  `default` ENUM('Y', 'N') NULL,
  PRIMARY KEY (`error_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_altan_codes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_altan_codes` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_altan_codes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `services_id` INT NOT NULL,
  `codeAltan` VARCHAR(100) NOT NULL COMMENT 'Es el código de altan a usar',
  `supplementary` ENUM('Y', 'N') NOT NULL DEFAULT 'N' COMMENT 'Define si el código es suplementario o de cambio de plan primario',
  `status` ENUM('A', 'I', 'T') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_altan_codes_islim_services1_idx` (`services_id` ASC),
  CONSTRAINT `fk_islim_altan_codes_islim_services1`
    FOREIGN KEY (`services_id`)
    REFERENCES `netwey`.`islim_services` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_pack_prices`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_pack_prices` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_pack_prices` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pack_id` INT NOT NULL,
  `service_id` INT NOT NULL,
  `type` ENUM('CO', 'CR') NOT NULL,
  `price_pack` DOUBLE NULL,
  `price_serv` DOUBLE NULL,
  `total_price` DOUBLE NULL,
  `status` ENUM('A', 'I', 'T') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_pack_prices_islim_packs1_idx` (`pack_id` ASC),
  INDEX `fk_islim_pack_prices_islim_services1_idx` (`service_id` ASC),
  CONSTRAINT `fk_islim_pack_prices_islim_packs1`
    FOREIGN KEY (`pack_id`)
    REFERENCES `netwey`.`islim_packs` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_pack_prices_islim_services1`
    FOREIGN KEY (`service_id`)
    REFERENCES `netwey`.`islim_services` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_asigned_sales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_asigned_sales` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_asigned_sales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `parent_email` VARCHAR(255) NOT NULL COMMENT 'Email del usuario superior inmediato.\nDel vendedor o si es el coordinador quedará asociado al el mismo.',
  `users_email` VARCHAR(255) NOT NULL COMMENT 'Email del vendedor',
  `n_tranfer` VARCHAR(50) NULL COMMENT 'N transferencia o depósito',
  `bank_id` INT NULL,
  `amount` DOUBLE NOT NULL,
  `amount_text` DOUBLE NOT NULL,
  `date_reg` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `date_dep` DATE NULL,
  `status` ENUM('A', 'P', 'I', 'T') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_asigned_sales_islim_banks1_idx` (`bank_id` ASC),
  INDEX `fk_islim_asigned_sales_islim_users1_idx` (`users_email` ASC),
  CONSTRAINT `fk_islim_asigned_sales_islim_users1`
    FOREIGN KEY (`users_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_asigned_sales_islim_banks1`
    FOREIGN KEY (`bank_id`)
    REFERENCES `netwey`.`islim_banks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_asigned_sale_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_asigned_sale_details` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_asigned_sale_details` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `asigned_sale_id` INT NOT NULL,
  `amount` DOUBLE NOT NULL,
  `amount_text` DOUBLE NULL,
  `unique_transaction` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_islim_asigned_sale_details_islim_asigned_sales1_idx` (`asigned_sale_id` ASC),
  CONSTRAINT `fk_islim_asigned_sale_details_islim_asigned_sales1`
    FOREIGN KEY (`asigned_sale_id`)
    REFERENCES `netwey`.`islim_asigned_sales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`islim_schedules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_schedules` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_schedules` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `client_dni` VARCHAR(45) NOT NULL,
  `users_email` VARCHAR(255) NOT NULL,
  `reg_email` VARCHAR(255) NULL,
  `date_schedules` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `obs` TINYTEXT NULL,
  `status` ENUM('A', 'I', 'V', 'P', 'T') NOT NULL DEFAULT 'A' COMMENT 'A =  Activo (Aun no ha sido visitado)\nI = Inactivo\nV = Visitado\nP = Pospuesto\nT = Eliminado\n',
  PRIMARY KEY (`id`),
  INDEX `fk_islim_schedules_islim_clients1_idx` (`client_dni` ASC),
  INDEX `fk_islim_schedules_islim_users1_idx` (`users_email` ASC),
  CONSTRAINT `fk_islim_schedules_islim_clients1`
    FOREIGN KEY (`client_dni`)
    REFERENCES `netwey`.`islim_clients` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_schedules_islim_users1`
    FOREIGN KEY (`users_email`)
    REFERENCES `netwey`.`islim_users` (`email`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netwey`.`Islim_broadbands`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`Islim_broadbands` ;

CREATE TABLE IF NOT EXISTS `netwey`.`Islim_broadbands` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `broadband` VARCHAR(45) NOT NULL COMMENT 'Velocidad de Conexión maxima',
  `num_broad` INT NOT NULL COMMENT 'Número de la velocidad de conexión',
  `status` ENUM('A', 'I', 'T') NOT NULL DEFAULT 'A' COMMENT 'Estatus del BroadBand\n\nA: Activo\nI: Inactivo\nT: Eliminado',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Con esta Tabla se definirán desde la velocidad mayor que se podrá conectar el cliente hasta mas mas baja.';


-- -----------------------------------------------------
-- Table `netwey`.`Islim_broadbands`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`Islim_broadbands` ;

CREATE TABLE IF NOT EXISTS `netwey`.`Islim_broadbands` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `broadband` VARCHAR(45) NOT NULL COMMENT 'Velocidad de Conexión maxima',
  `num_broad` INT NOT NULL COMMENT 'Número de la velocidad de conexión',
  `status` ENUM('A', 'I', 'T') NOT NULL DEFAULT 'A' COMMENT 'Estatus del BroadBand\n\nA: Activo\nI: Inactivo\nT: Eliminado',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Con esta Tabla se definirán desde la velocidad mayor que se podrá conectar el cliente hasta mas mas baja.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_arti_packs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_arti_packs` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_arti_packs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pack_id` INT NOT NULL,
  `inv_article_id` INT NOT NULL,
  `status` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  INDEX `fk_islim_arti_packs_islim_packs1_idx` (`pack_id` ASC),
  INDEX `fk_islim_arti_packs_islim_inv_articles1_idx` (`inv_article_id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `pack_id_UNIQUE` (`pack_id` ASC, `inv_article_id` ASC),
  CONSTRAINT `fk_islim_arti_packs_islim_packs1`
    FOREIGN KEY (`pack_id`)
    REFERENCES `netwey`.`islim_packs` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_islim_arti_packs_islim_inv_articles1`
    FOREIGN KEY (`inv_article_id`)
    REFERENCES `netwey`.`islim_inv_articles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabla relacionas de paquetes con productos.';


-- -----------------------------------------------------
-- Table `netwey`.`islim_i18n`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netwey`.`islim_i18n` ;

CREATE TABLE IF NOT EXISTS `netwey`.`islim_i18n` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `country_code` VARCHAR(3) NOT NULL,
  `language` VARCHAR(4) NOT NULL,
  `attribute` VARCHAR(45) NOT NULL DEFAULT '',
  `message` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

USE `netwey` ;

-- -----------------------------------------------------
-- Placeholder table for view `netwey`.`islim_client_views`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `netwey`.`islim_client_views` (`name` INT, `last_name` INT, `email` INT, `phone_home` INT, `vendor` INT, `name_vendor` INT, `last_name_vendor` INT, `plan` INT, `type_buy` INT, `product` INT, `phone_netwey` INT, `imei` INT, `iccid` INT, `cost` INT, `serviceability` INT, `lat` INT, `lng` INT, `date_reg` INT, `date_buy` INT, `status` INT);

-- -----------------------------------------------------
-- View `netwey`.`islim_client_views`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `netwey`.`islim_client_views` ;
DROP TABLE IF EXISTS `netwey`.`islim_client_views`;
USE `netwey`;
CREATE  OR REPLACE VIEW `islim_client_views` AS
    SELECT 
        ic.name,
        ic.last_name,
        ic.email,
        phone_home,
        isa.users_email AS vendor,
        iu.name AS name_vendor,
        iu.last_name AS last_name_vendor,
        ips.title AS plan,
        type_buy,
        iia.title product,
        icn.msisdn AS phone_netwey,
        iiad.imei,
        iiad.iccid,
        isa.amount AS cost,
        serviceability,
        icn.lat,
        icn.lng,
        ic.date_reg,
        date_buy,
        icn.status
    FROM
        islim_clients AS ic,
        islim_users iu,
        islim_client_netweys AS icn,
        islim_sales AS isa,
        islim_packs AS ips,
        islim_inv_arti_details AS iiad,
        islim_inv_articles AS iia
    WHERE
        ic.dni = icn.clients_dni
            AND icn.unique_transaction = isa.unique_transaction
            AND isa.packs_id = ips.id
            AND isa.inv_arti_details_id = iiad.id
            AND isa.users_email = iu.email
            AND iia.id = iiad.inv_article_id;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
